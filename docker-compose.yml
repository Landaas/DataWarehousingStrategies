version: '3.1'

services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - "8081:8081"

  postgres:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - ./csv:/tmp

  adminer:
    image: adminer
    restart: always
    ports:
      - 8084:8080

  python-app:
    build: .
    restart: on-failure
    depends_on:
      - mongo
    environment:
      MONGO_USERNAME: admin
      MONGO_PASSWORD: password
      MONGO_HOSTNAME: mongo
      MONGO_PORT: 27017
    volumes:
      - .:/usr/src/app

  neo4j:
    image: neo4j
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./neo4j:/data
    environment:
      NEO4J_AUTH: neo4j/password

  flask-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - postgres
      - neo4j
    environment:
      - MONGO_URI=mongodb://admin:password@mongo:27017/
    volumes:
      - .:/usr/src/app
    restart: always

volumes:
  mongodb_data:
